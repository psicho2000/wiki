Configuration
=============
git config --global core.excludesfile "%USERPROFILE%\.gitignore"
    *.iml
    .idea/
git config --global core.autocrlf true

###############################################################

# stage and commit 
git commit -am "commit message"

# filter contents of a repository
git ls-tree --full-tree -r HEAD|grep .settings

# remove directory from repository
git rm --cached -r <directory>
git commit

# push an existing repository from the command line
git remote add origin <remote-url>
git push -u origin master

# create a new repository on the command line
echo "# test" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin <remote-url>
git push -u origin master

# create and push a new branch
git checkout -b <branch>
git push -u origin <branch>

# switch to another existing branch
git fetch                       # fetches new branch names
git checkout <branch-name>
# shorthand for git branch & git checkout
git checkout -b <new-branch-name>
# revert (reset) a single file
git checkout <filename>

# show last 2 commits
git log -2

# create tag
git tag -a v1.0.1
git push --tags

##### REMARKS
# git bash: editor for commit message is vim
# <tab> <tab> enables auto-completion. Useful also to find out known repositories (which must have been fetched first).

# Enabling multiple GitHub credentials
# Normally, it should be possible to configure local credentials, which overwrite global (which override system).
# This however does not work.
# Workaround: use store for private credentials, manager for team credentials, swap using aliases:
# 1. Create C:/Users/<user>/.git-credentials (containing private credentials)
#    https://<user>:<password>@github.com
# 2. Create C:/Users/<user>/.bashrc
#    alias team='git config --global credential.helper manager'
#    alias priv='git config --global credential.helper store'
# 3. Remove [credential] section from system config
#    git config --system -e
# 4. Helper Function in C:/Users/<user>/.bashrc
#    push_wiki() {
#        priv
#        cd /d/Eigenes/wiki
#        git commit -am "$1"
#        git push
#        team
#    }